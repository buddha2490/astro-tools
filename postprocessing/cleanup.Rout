
R version 4.5.1 (2025-06-13 ucrt) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(magrittr)
> library(tidyr)

Attaching package: 'tidyr'

The following object is masked from 'package:magrittr':

    extract

> 
> 
> # First run the report
> 
> 
> src <- file.path("C:/users/Brian Carter/Astronomy/astro-tools/postprocessing")
> 
> camera <- "c:/users/Brian Carter/astronomy/ASI2600MM/ES127"
> 
> objects <- list.dirs(camera, recursive = FALSE, full.names = TRUE) 
> 
> cleanup <- function(myObject) {
+   
+   sessions <- data.frame(sessions = list.dirs(myObject, recursive = FALSE, full.names = TRUE)) %>%
+     mutate(object = basename(myObject)) %>%
+     mutate(folder = basename(sessions)) %>%
+     mutate(dates = stringr::str_replace(folder, paste0(object, "_"), ""))  %>%
+     filter(dates == Sys.Date() - 1) %>%
+     pull(sessions)
+   
+   flatDir <- file.path(sessions, "flats")
+   masterDir <- file.path(flatDir, "master")
+   file.path(flatDir, "calibrated") %>% unlink(recursive = TRUE, force = TRUE)
+   file.path(flatDir, "logs") %>% unlink(recursive = TRUE, force = TRUE)
+   
+   # Count the types of flats
+   flats <- list.files(flatDir, pattern = "fits")
+   l <- ifelse(length(flats[grep("L", flats)]) >0, 1, 0)
+   r <- ifelse(length(flats[grep("R", flats)]) >0, 1, 0)
+   g <- ifelse(length(flats[grep("G", flats)]) >0, 1, 0)
+   b <- ifelse(length(flats[grep("B", flats)]) >0, 1, 0)
+   h <- ifelse(length(flats[grep("H", flats)]) >0, 1, 0)
+   s <- ifelse(length(flats[grep("S", flats)]) >0, 1, 0)
+   o <- ifelse(length(flats[grep("O", flats)]) >0, 1, 0)
+ 
+   totalFlats <- sum(l, r, g, b, h, s, o)
+ 
+   # Count the stacked flats
+   nMaster <- list.files(masterDir, pattern = ".xisf", full.names = TRUE)
+  
+   lapply(nMaster, function(x) file.copy(from = x, to = sessions))
+   print(nMaster); print(sessions);
+ 
+   xisf <- list.files(sessions, pattern = "masterFlat")
+   if (length(xisf) != 0) {
+     unlink(flatDir, recursive = TRUE, force = TRUE)
+   }
+ 
+ }
> 
> objects %>% lapply(cleanup)
list()
> file.remove("C:/users/Brian Carter/Astronomy/astro-tools/postprocessing/wbpp.bat")
[1] TRUE
> con <- file("C:/users/Brian Carter/Astronomy/astro-tools/postprocessing/wbpp.bat")
> writeLines("", con)
> close(con)
> 
> source("C:/Users/Brian Carter/Astronomy/astro-tools/postprocessing/logFiles.R")

Attaching package: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union


Attaching package: 'huxtable'

The following object is masked from 'package:dplyr':

    add_rownames


Attaching package: 'pharmaRTF'

The following objects are masked from 'package:huxtable':

    align, align<-, bold, bold<-, font, font_size, font_size<-, font<-,
    header_rows, header_rows<-, italic, italic<-, set_align, set_bold,
    set_font, set_font_size, set_header_rows, set_italic

The following object is masked from 'package:graphics':

    text

Error in UseMethod("mutate") : 
  no applicable method for 'mutate' applied to an object of class "NULL"
Calls: source ... mutate -> summarize -> group_by -> select -> mutate
In addition: Warning message:
One or more parsing issues, call `problems()` on your data frame for details,
e.g.:
  dat <- vroom(...)
  problems(dat) 
Execution halted
