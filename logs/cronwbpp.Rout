
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### cronjob - automatic PI stacking
> 
> 
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(magrittr)
> 
> transfer <- "/Volumes/Astro-SSD/Transfer"
> 
> 
> 
> # Functions ---------------------------------------------------------------
> wbppScripter <- function(path) {
+   
+ 
+     exe <- '"/Applications/PixInsight/PixInsight.app/Contents/MacOS/PixInsight"  -n --automation-mode -r='
+     
+     js1 <- '"/Applications/Pixinsight/src/scripts/BatchPreprocessing/FBPP.js,automationMode=true,outputDirectory='
+     
+     wbpp <- file("/Users/briancarter/Astronomy/astro-tools/Shell/wbpp.sh", "a")
+     
+     system('chmod 777 "/Users/briancarter/Astronomy/astro-tools/postprocessing/wbpp.sh"')
+     
+   
+   outputdir <- "/Volumes/Astro-SSD/transfer"
+   
+   dir <- glue::glue(path, '"')
+   
+   js2 <- '--force-exit'
+   
+   foo <- glue::glue("{exe}{js1}{outputdir},dir={dir} {js2}")
+   
+   write(foo, wbpp, append = TRUE)
+   close(wbpp)
+   
+   
+   
+ }
> 
> wbppInitializer <- function() {
+   wbpp <- file.path("/Users/briancarter/Astronomy/astro-tools/Shell/wbpp.sh")
+   file.remove(wbpp)
+   file(wbpp, "a")
+   system('chmod 777 "/Users/briancarter/Astronomy/astro-tools/Shell/wbpp.sh"')
+ }
> 
> listSubDirs <- function() {
+   data.frame(dir = list.dirs("/Volumes/Astro-SSD/Transfer", recursive = TRUE, full.names = TRUE)) %>%
+     filter(!stringr::str_detect(dir, "metadata") == TRUE) %>%
+     filter(!stringr::str_detect(dir, "checkFits") == TRUE) %>%
+     filter(!stringr::str_detect(dir, "flats") == TRUE) %>%
+     filter(!stringr::str_detect(dir, "master") == TRUE) %>%
+     filter(!stringr::str_detect(dir, "registered") == TRUE) %>%
+     filter(!stringr::str_detect(dir, "calibrated") == TRUE) %>%
+     filter(!dir %in% list.dirs("/Volumes/Astro-SSD/Transfer", recursive = FALSE, full.names = TRUE)) %>%
+     filter(dir != "/Volumes/Astro-SSD/Transfer") %>%
+     pull(dir)
+   
+ }
> 
> 
> 
> 
> 
> objects <- listSubDirs()
> 
> # The rest needs to be a loop.
> # 1. initialize wbpp
> # 2. run the scripter on objects[i]
> # 3. clean up the output
> # 4. loop
> 
> for (i in 1:length(objects)) {
+ 
+   path <- objects[i]
+   dir <- dirname(path)
+   objectName <- basename(dir)
+   date <- stringr::str_remove(basename(path), glue::glue("{objectName}_")) # extract date from object name
+   
+   wbppInitializer() # initializes the wbpp script
+   path %>% wbppScripter()
+   "/Users/briancarter/Astronomy/astro-tools/Shell/wbpp.sh" %>% system()
+   
+   # clean up the output
+   file.path(transfer, "calibrated") %>% unlink(force = TRUE, recursive = TRUE)
+   file.path(transfer, "logs")  %>% unlink(force = TRUE, recursive = TRUE)
+   file.path(transfer, "fastIntegration") %>% unlink(force = TRUE, recursive = TRUE)
+   master <- file.path(transfer, "master")
+   stacks <- data.frame(file = list.files(master, pattern = "autocrop"))  %>%
+     mutate(Filter = ifelse(
+       stringr::str_detect(file, "-L_") == TRUE, "L", ifelse(
+         stringr::str_detect(file, "-R_") == TRUE, "R", ifelse(
+           stringr::str_detect(file, "-G_") == TRUE, "G", ifelse(
+             stringr::str_detect(file, "-B_") == TRUE, "B", ifelse(
+               stringr::str_detect(file, "-H_") == TRUE, "H", ifelse(
+                 stringr::str_detect(file, "-O_") == TRUE, "O", ifelse(
+                   stringr::str_detect(file, "-S_") == TRUE, "S", "Unknown"
+                 )))))))) %>%
+     mutate(filename = glue::glue("{objectName}_{Filter}_{date}.xisf"))
+   
+   for (i in 1:nrow(stacks)) {
+     file.rename(file.path(master, stacks$file[i]),
+                 file.path(master, stacks$filename[i]))
+     file.copy(file.path(master, stacks$filename[i]),
+               dir)
+   }
+   master %>% unlink(force = TRUE, recursive = TRUE)
+ }  

PixInsight Core 1.9.3 Lockhart (x64)
Copyright (c) 2003-2025 Pleiades Astrophoto


** A running instance of the PixInsight core application has crashed.
Reusing instance slot #1
qt.qpa.fonts: Populating font family aliases took 136 ms. Replace uses of missing font family "AcademyEngravedLetPlain" with one that exists to avoid this cost. 

:LOGFILE:/Volumes/Astro-SSD/transfer/logs/20250807002638.log:LOGFILE:

<* Warning *> Unconditional exit as per user request: No data were saved!


PixInsight Core 1.9.3 Lockhart (x64)
Copyright (c) 2003-2025 Pleiades Astrophoto

qt.qpa.fonts: Populating font family aliases took 139 ms. Replace uses of missing font family "AcademyEngravedLetPlain" with one that exists to avoid this cost. 

:LOGFILE:/Volumes/Astro-SSD/transfer/logs/20250807004941.log:LOGFILE:

<* Warning *> Unconditional exit as per user request: No data were saved!

> 
> 
> 
> 
> 
> proc.time()
     user    system   elapsed 
18426.532   387.173  2213.490 
