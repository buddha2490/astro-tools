
R version 4.5.1 (2025-06-13) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

         used (Mb) gc trigger (Mb) limit (Mb) max used (Mb)
Ncells 132341  7.1     350000 18.7         NA   205874 11.0
Vcells 260302  2.0    8388608 64.0      24576  1078099  8.3
[[1]]
[1] TRUE

[[2]]
[1] TRUE

[[3]]
[1] TRUE

[[4]]
[1] TRUE

[[5]]
[1] TRUE

[[6]]
[1] TRUE

[[7]]
[1] TRUE

[[8]]
[1] TRUE

[[9]]
[1] TRUE

[[10]]
[1] TRUE

[[11]]
[1] TRUE

> 
> 
> # AstroDB
> library(dplyr)
> library(DBI)
> library(stringr)
> library(magrittr)
> library(tidyr)

Attaching package: ‘tidyr’

The following object is masked from ‘package:testthat’:

    matches

The following object is masked from ‘package:magrittr’:

    extract

> 
> 
> debug <- FALSE
> 
> os <- Sys.info()["sysname"]
> machine <- Sys.info()["nodename"]
> 
> os <- ifelse(os == "Darwin", "Mac", "Windows") %>% as.character()
> machine <- ifelse(
+   stringr::str_detect(machine, "BRIANC-MacUS") == TRUE, "MBP13", ifelse(
+     stringr::str_detect(machine, "Brians-MacBook-Pro") == TRUE, "MBP14", ifelse(
+       stringr::str_detect(machine, "Office-Mac") == TRUE, "OfficeMac",
+       ifelse(machine == "ES127", "ES127", machine)))) %>%
+   as.character()
> 
> # Environmental parameters ------------------------------------------------
> setwd("/Volumes/Office-SSD/Astronomy/astro-tools")
> subs <- "/Volumes/Office-SSD/Astronomy/Astrophotography"
> subdirs <- subs %>%
+   list.dirs(recursive = FALSE) %>%
+   stringr::str_subset("Dark Library", negate = TRUE) # drops darks
> 
> 
> 
> # Functions ---------------------------------------------------------------
> "astroDB/functions/functions.R" %>% source()
> # Inventory subs ----------------------------------------------------------
> 
> 
> 
> 
> subsDf <- subsInventory()
>                 
> 
> # Inventory metadata ------------------------------------------------------
> metadataFiles <- list.files(subdirs, pattern = "ImageMetaData.csv",
+                             full.names = TRUE, recursive = TRUE, all.files = TRUE)
> 
> 
> # Update the metadata file with the correct file path information
> # they are listed as "c:/users/Brian Carter" and I want them on the NAS
> invisible(capture.output(
+   suppressMessages(
+     suppressWarnings({
+       sapply(metadataFiles, changeMetaPath, subsDf = subsDf)
+     })
+   )
+ ))
> 
> 
> 
> 
> # nrow = 4740 at development - August 15th 2025
> invisible(capture.output(
+   suppressMessages(
+ metadata <- lapply(metadataFiles, readr::read_csv) %>%
+   Reduce(function(x,y) bind_rows(x, y), .) %>%
+   processMetadata() %>%
+   fixMissingMeta()
+   )
+ )) 
> 
> 
> astroDB <- connectDB()
> old <- tbl(astroDB, "astroSubs") %>%
+   collect()
> 
> 
> # compare the database table to the new version
> # If the same: stop
> # If there is new stuff: write it to the database
> add_to_database <- metadata %>%
+   anti_join(old)
Joining with `by = join_by(Object, Date, Filename, ExposureStart, FilterName,
Duration, CameraTemp, Gain, ADUMean, DetectedStars, HFR, FWHM, Eccentricity,
GuidingRMSArcSec, FocuserPosition, FocuserTemp, RotatorPosition, Status)`
> if (nrow(add_to_database) > 0) {
+   message("Adding new metadata to the database")
+   dbAppendTable(astroDB, "astroSubs", add_to_database)
+ } else {
+   message("No new metadata to add to the database")
+ }
No new metadata to add to the database
> 
> # Add a log
> log <- data.frame(
+   Timestamp = Sys.time(),
+   Action = "Inventory metadata",
+   Status = ifelse(nrow(add_to_database) > 0, "Added new metadata", "No new metadata")
+ )
> 
> dbAppendTable(astroDB, "astroDBLog", log)
[1] 1
> dbDisconnect(astroDB)
> 
> 
> rm(list = ls())
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
  5.154   1.497   6.360 
