
R version 4.5.1 (2025-06-13 ucrt) -- "Great Square Root"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(magrittr)
> library(tidyr)

Attaching package: 'tidyr'

The following object is masked from 'package:magrittr':

    extract

> 
> 
> 
> os <- Sys.info()["sysname"]
> machine <- Sys.info()["nodename"]
> 
> os <- ifelse(os == "Darwin", "Mac", "Windows") %>% as.character()
> machine <- ifelse(machine == "BRIANC-MacUS.attlocal.net", "MBP13",
+                   ifelse(machine == "Brians-MBP.attlocal.net", "MBP14",
+                          ifelse(machine == "ES127", "ES127", machine))) %>%
+   as.character()
> 
> 
> 
> # Environmental parameters ------------------------------------------------
> 
> if (machine == "ES127") {
+   setwd("C:/users/Brian Carter/Astronomy/astro-tools/postprocessing")
+   src <- file.path("C:/users/Brian Carter/Astronomy/astro-tools/postprocessing")
+   cameraSrc <- "c:/users/Brian Carter/astronomy/ASI2600MM/ES127"
+   transfer <- "z:"
+   wbpp <- "C:/users/Brian Carter/Astronomy/astro-tools/postprocessing/wbpp.bat"
+ } else {
+   setwd("/Users/briancarter/Astronomy/astro-tools/postprocessing")
+   src <- file.path("/Users/briancarter/Astronomy/astro-tools/postprocessing")
+   cameraSrc <- "/Users/briancarter/Astronomy/testing"
+   username <- Sys.getenv("username")
+   password <- Sys.getenv("password")
+   mbp13 <- "BRIANC-MacUS"
+   laptop <- paste0("open 'smb://", username, ":", password, "@", mbp13, "/Astro-SSD'")
+   system(laptop) # MBP13 connection
+   transfer <- "/Volumes/Astro-SSD/transfer"
+   rm(username, password, mbp13)
+   wbpp <- file.path(src, "wbpp.sh")
+ 
+ }
> 
> source("functions/functions.R")
> 
> 
> 
> # Run the scripts ---------------------------------------------------------
> 
> 
> 
> list.dirs(cameraSrc, recursive = FALSE, full.names = TRUE) %>%
+   lapply(cleanup, os = os, machine = machine)
[[1]]
[1] 0

> 
> file.remove(wbpp)
[1] TRUE
> con <- file(wbpp)
> writeLines("", con)
> close(con)
> 
> 
> 
> # Logs --------------------------------------------------------------------
> 
> glue::glue("{src}/logFiles.R") %>% source()

Attaching package: 'lubridate'

The following objects are masked from 'package:base':

    date, intersect, setdiff, union


Attaching package: 'huxtable'

The following object is masked from 'package:dplyr':

    add_rownames


Attaching package: 'pharmaRTF'

The following objects are masked from 'package:huxtable':

    align, align<-, bold, bold<-, font, font_size, font_size<-, font<-,
    header_rows, header_rows<-, italic, italic<-, set_align, set_bold,
    set_font, set_font_size, set_header_rows, set_italic

The following object is masked from 'package:graphics':

    text

Error in `filter()`:
ℹ In argument: `DATE >= starttime & DATE <= endtime`.
Caused by error:
! `..1` must be of size 1742 or 1, not size 0.
Backtrace:
     ▆
  1. ├─glue::glue("{src}/logFiles.R") %>% source()
  2. ├─base::source(.)
  3. │ ├─base::withVisible(eval(ei, envir))
  4. │ └─base::eval(ei, envir)
  5. │   └─base::eval(ei, envir)
  6. ├─... %>% times()
  7. ├─global times(.)
  8. │ └─... %>% ungroup()
  9. ├─dplyr::ungroup(.)
 10. ├─dplyr::mutate(...)
 11. ├─dplyr::group_by(., EVENT_ID)
 12. ├─dplyr::filter(., ROLE != "Annotation")
 13. ├─dplyr::filter(., DATE >= starttime & DATE <= endtime)
 14. ├─dplyr:::filter.data.frame(., DATE >= starttime & DATE <= endtime)
 15. │ └─dplyr:::filter_rows(.data, dots, by)
 16. │   └─dplyr:::filter_eval(...)
 17. │     ├─base::withCallingHandlers(...)
 18. │     └─mask$eval_all_filter(dots, env_filter)
 19. │       └─dplyr (local) eval()
 20. ├─dplyr:::dplyr_internal_error(...)
 21. │ └─rlang::abort(class = c(class, "dplyr:::internal_error"), dplyr_error_data = data)
 22. │   └─rlang:::signal_abort(cnd, .file)
 23. │     └─base::signalCondition(cnd)
 24. └─dplyr (local) `<fn>`(`<dpl:::__>`)
 25.   └─rlang::abort(message, class = error_class, parent = parent, call = error_call)
Warning message:
One or more parsing issues, call `problems()` on your data frame for details,
e.g.:
  dat <- vroom(...)
  problems(dat) 
Execution halted
